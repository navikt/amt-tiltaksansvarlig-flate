{"version":3,"sources":["mock/index.ts","component/page/main/MainPage.tsx","App.tsx","utils/environment.ts","index.tsx"],"names":["allHandlers","rest","get","req","res","ctx","delay","json","isAuthenticated","setupWorker","start","serviceWorker","url","process","catch","e","console","error","MainPage","App","path","this","isDevelopment","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAA,2BAGMA,EAAgC,CACrCC,IAAKC,IAAI,gCAAgC,SAACC,EAAKC,EAAKC,GACnD,OAAOD,EAAIC,EAAIC,MAAM,KAAMD,EAAIE,KAAK,CACnCC,iBAAiB,SAKpBC,IAAW,WAAX,EAAeT,GACbU,MAAM,CAAEC,cAAe,CAAEC,IAAKC,sDAC9BC,OAAM,SAACC,GAEPC,QAAQC,MAAM,uCAAwCF,O,yGCb3CG,EAAW,WACvB,OACC,+BACC,qDCAUC,EAAM,WASlB,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACC,cAAC,EAAD,W,iBCRO,I,0FATX,WACC,OAAQC,KAAKC,gB,yBAGd,WACC,OAAOT,M,OCEDS,eACPC,EAAQ,IAGTC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.b5ed0b24.chunk.js","sourcesContent":["import { rest, setupWorker } from 'msw'\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler'\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/auth-proxy/is-authenticated', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json({\n\t\t\tisAuthenticated: true\n\t\t}))\n\t})\n]\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e)\n\t})\n","import React from 'react'\n\nexport const MainPage = (): React.ReactElement => {\n\treturn (\n\t\t<main>\n\t\t\t<h1>Du er logget inn</h1>\n\t\t</main>\n\t)\n}","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport { MainPage } from './component/page/main/MainPage'\n\nexport const App = (): React.ReactElement => {\n\t// if (isNotStartedOrPending(fetchInnloggetAnsattPromise)) {\n\t// \treturn '...'\n\t// }\n\t//\n\t// if (isRejected(fetchInnloggetAnsattPromise)) {\n\t// \treturn <LoginPage />\n\t// }\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<MainPage/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t)\n}\n","class Environment {\n\tget isProduction() {\n\t\treturn !this.isDevelopment\n\t}\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true'\n\t}\n}\n\nconst env = new Environment()\n\nexport default env\n","import './index.less'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport env from './utils/environment'\n\nif (env.isDevelopment) {\n\trequire('./mock')\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}