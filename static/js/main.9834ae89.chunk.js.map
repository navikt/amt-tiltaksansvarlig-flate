{"version":3,"sources":["utils/use-promise.ts","api/utils.ts","utils/constants.ts","api/api.ts","utils/environment.ts","component/page/login/LoginPage.tsx","utils/url-utils.ts","component/page/main/MainPage.tsx","App.tsx","index.tsx","globals.module.scss","component/page/login/LoginPage.module.scss","mock/index.ts"],"names":["Status","axiosInstance","axios","create","withCredentials","headers","isAuthenticated","get","env","process","this","isPreprod","window","location","hostname","endsWith","isProd","isDemo","LoginPage","loginUrl","path","strippedPath","startsWith","substr","environment","publicUrl","appUrl","href","className","styles","loginPage","Heading","size","cls","globalStyles","blokkXl","title","Alert","variant","MainPage","defaultState","result","undefined","error","status","NOT_STARTED","App","state","isAuthenticatedPromise","func","dependencies","useState","promise","setPromise","promiseState","setPromiseState","useEffect","canceled","then","res","RESOLVED","catch","err","REJECTED","usePromise","PENDING","isRejected","data","isDevelopment","require","ReactDOM","render","StrictMode","document","getElementById","module","exports","allHandlers","rest","req","ctx","delay","json","setupWorker","start","serviceWorker","url","e","console"],"mappings":"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","file":"static/js/main.9834ae89.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport enum Status {\n\tNOT_STARTED = 'NOT_STARTED',\n\tPENDING = 'PENDING',\n    RESOLVED = 'RESOLVED',\n    REJECTED = 'REJECTED'\n}\n\ntype PromiseState<R, E> = NotStartedPromiseState | PendingPromiseState | ResolvedPromiseState<R> | RejectedPromiseState<E>;\n\ninterface NotStartedPromiseState {\n\tresult: undefined;\n\terror: undefined;\n\tstatus: Status.NOT_STARTED;\n}\n\ninterface PendingPromiseState {\n    result: undefined;\n    error: undefined;\n    status: Status.PENDING;\n}\n\ninterface ResolvedPromiseState<R> {\n    result: R;\n    error: undefined;\n    status: Status.RESOLVED;\n}\n\ninterface RejectedPromiseState<E> {\n    result: undefined;\n    error: E;\n    status: Status.REJECTED;\n}\n\nconst defaultState: NotStartedPromiseState = {\n\tresult: undefined,\n\terror: undefined,\n\tstatus: Status.NOT_STARTED\n}\n\nexport const usePromise = <R, E = Error>(func?: () => Promise<R>, dependencies?: never[]): PromiseState<R, E> & { setPromise: (promise: Promise<R>) => void } => {\n\tconst [ promise, setPromise ] = useState<Promise<R>>()\n\tconst [ promiseState, setPromiseState ] = useState<PromiseState<R, E>>(defaultState)\n\n\tuseEffect(() => {\n\t\tif (func) {\n\t\t\tsetPromise(func())\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, dependencies || [])\n\n\tuseEffect(() => {\n\t\tif (promise) {\n\t\t\tlet canceled = false\n\n\t\t\tsetPromiseState(defaultState)\n\n\t\t\tpromise\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (canceled) return\n\n\t\t\t\t\tsetPromiseState({ status: Status.RESOLVED, result: res, error: undefined })\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (canceled) return\n\n\t\t\t\t\tsetPromiseState({ status: Status.REJECTED, result: undefined, error: err })\n\t\t\t\t})\n\n\t\t\treturn () => {\n\t\t\t\tcanceled = true\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [ promise ])\n\n\treturn {\n\t\t...promiseState,\n\t\tsetPromise\n\t}\n}\n\nexport const isNotStartedOrPending = <R, E>(state: PromiseState<R, E>): state is NotStartedPromiseState | PendingPromiseState => {\n\treturn state.status === Status.NOT_STARTED || state.status === Status.PENDING\n}\n\nexport const isResolved = <R, E>(state: PromiseState<R, E>): state is ResolvedPromiseState<R> => {\n\treturn state.status === Status.RESOLVED\n}\n\nexport const isRejected = <R, E>(state: PromiseState<R, E>): state is RejectedPromiseState<E> => {\n\treturn state.status === Status.REJECTED\n}\n","import axios from 'axios'\n\nimport { APP_NAME } from '../utils/constants'\n\nexport const axiosInstance = axios.create({\n\twithCredentials: true,\n\theaders: { 'Nav-Consumer-Id': APP_NAME },\n})\n","export const APP_NAME = 'amt-tiltaksansvarlig-flate'","import { AxiosPromise } from 'axios'\n\nimport { axiosInstance } from './utils'\n\nexport interface IsAuthenticated {\n\tisAuthenticated: boolean;\n}\n\nexport const isAuthenticated = (): AxiosPromise<IsAuthenticated> => {\n\treturn axiosInstance.get('/auth-proxy/is-authenticated')\n}","\nclass Environment {\n\n\tget isDevelopment() {\n\t\treturn process.env.REACT_APP_DEV === 'true'\n\t}\n\n\tget isProd(): boolean {\n\t\treturn !this.isPreprod && window.location.hostname.endsWith('nav.no')\n\t}\n\n\tget isPreprod(): boolean {\n\t\treturn window.location.hostname.endsWith('dev.nav.no')\n\t}\n\n\tget isDemo(): boolean {\n\t\treturn window.location.hostname.endsWith('github.io')\n\t}\n\n\tget publicUrl(): string {\n\t\treturn process.env.PUBLIC_URL || ''\n\t}\n\n\tget name(): string {\n\t\tif (this.isProd) {\n\t\t\treturn 'production'\n\t\t} else if (this.isPreprod) {\n\t\t\treturn 'preprod'\n\t\t} else if (this.isDemo) {\n\t\t\treturn 'demo'\n\t\t} else {\n\t\t\treturn 'development'\n\t\t}\n\t}\n\n}\n\nconst env = new Environment()\n\nexport default env\n","import { Alert, Heading } from '@navikt/ds-react'\nimport cls from 'classnames'\nimport React from 'react'\n\nimport globalStyles from '../../../globals.module.scss'\nimport { appUrl } from '../../../utils/url-utils'\nimport styles from './LoginPage.module.scss'\n\nexport const LoginPage = (): React.ReactElement => {\n\tconst loginUrl = appUrl(`/oauth2/login?redirect=${window.location.href}`)\n\n\treturn (\n\t\t<main className={styles.loginPage}>\n\t\t\t<Heading size=\"large\" className={cls(globalStyles.blokkXl, styles.title)}>Hei!</Heading>\n\n\t\t\t<Alert variant=\"warning\" className={globalStyles.blokkXl}>\n\t\t\t\tDette er en demol√∏sning\n\t\t\t</Alert>\n\n\t\t\t<a className=\"knapp knapp--hoved\" href={loginUrl}>Logg inn</a>\n\t\t</main>\n\t)\n}","import environment from './environment'\n\nexport const appUrl = (path: string): string => {\n\tconst strippedPath = path.startsWith('/') ? path.substr(1) : path\n\treturn `${environment.publicUrl}/${strippedPath}`\n}\n","import React from 'react'\n\nexport const MainPage = (): React.ReactElement => {\n\treturn (\n\t\t<main>\n\t\t\t<h1>Du er logget inn</h1>\n\t\t</main>\n\t)\n}","import { AxiosResponse } from 'axios'\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport { IsAuthenticated,isAuthenticated } from './api/api'\nimport { LoginPage } from './component/page/login/LoginPage'\nimport { MainPage } from './component/page/main/MainPage'\nimport { isNotStartedOrPending, isRejected, usePromise } from './utils/use-promise'\n\nexport const App = (): React.ReactElement => {\n\tconst isAuthenticatedPromise = usePromise<AxiosResponse<IsAuthenticated>>(isAuthenticated)\n\n\tif (isNotStartedOrPending(isAuthenticatedPromise)) {\n\t\treturn <div>...</div>\n\t}\n\n\tif (isRejected(isAuthenticatedPromise) || !isAuthenticatedPromise?.result.data.isAuthenticated) {\n\t\treturn <LoginPage />\n\t}\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<MainPage/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t)\n}\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport env from './utils/environment'\n\nif (env.isDevelopment) {\n\trequire('./mock')\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteBackground\":\"globals_whiteBackground__1clJe\",\"blokkNull\":\"globals_blokkNull__XuVH_\",\"blokkXxxs\":\"globals_blokkXxxs__2cHBm\",\"blokkXxs\":\"globals_blokkXxs__3fcdc\",\"blokkXs\":\"globals_blokkXs__3fVjl\",\"blokkS\":\"globals_blokkS__1hbJk\",\"blokkM\":\"globals_blokkM__8Dk38\",\"blokkL\":\"globals_blokkL__GNqYo\",\"blokkXl\":\"globals_blokkXl__2lZ3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__1dYhr\",\"title\":\"LoginPage_title__1Bcbt\"};","import { rest, setupWorker } from 'msw'\nimport { RequestHandler } from 'msw/lib/types/handlers/RequestHandler'\n\nconst allHandlers: RequestHandler[] = [\n\trest.get('/auth-proxy/is-authenticated', (req, res, ctx) => {\n\t\treturn res(ctx.delay(500), ctx.json({\n\t\t\tisAuthenticated: true\n\t\t}))\n\t})\n]\n\nsetupWorker(...allHandlers)\n\t.start({ serviceWorker: { url: process.env.PUBLIC_URL + '/mockServiceWorker.js' } })\n\t.catch((e) => {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Unable to setup mocked API endpoints', e)\n\t})\n"],"sourceRoot":""}